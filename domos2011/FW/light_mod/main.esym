C L "MAIN" 0 40 1 "FUNCTION"
D G "__PCH__" 0 241 ""4.106""
D G "__DEVICE__" 0 241 "4685"
D G "__DATE__" 0 241 ""23-Abr-13""
D G "__TIME__" 0 241 ""22:19:57"" "Standard Header file for the PIC18F4685 device ////////////////"
d G "PIN_A0" 2 25 "31744"
d G "PIN_A1" 2 26 "31745"
d G "PIN_A2" 2 27 "31746"
d G "PIN_A3" 2 28 "31747"
d G "PIN_A4" 2 29 "31748"
d G "PIN_A5" 2 30 "31749"
d G "PIN_A6" 2 31 "31750"
d G "PIN_A7" 2 32 "31751"
d G "PIN_B0" 2 34 "31752"
d G "PIN_B1" 2 35 "31753"
d G "PIN_B2" 2 36 "31754"
d G "PIN_B3" 2 37 "31755"
d G "PIN_B4" 2 38 "31756"
d G "PIN_B5" 2 39 "31757"
d G "PIN_B6" 2 40 "31758"
d G "PIN_B7" 2 41 "31759"
d G "PIN_C0" 2 43 "31760"
d G "PIN_C1" 2 44 "31761"
d G "PIN_C2" 2 45 "31762"
d G "PIN_C3" 2 46 "31763"
d G "PIN_C4" 2 47 "31764"
d G "PIN_C5" 2 48 "31765"
d G "PIN_C6" 2 49 "31766"
d G "PIN_C7" 2 50 "31767"
d G "PIN_D0" 2 52 "31768"
d G "PIN_D1" 2 53 "31769"
d G "PIN_D2" 2 54 "31770"
d G "PIN_D3" 2 55 "31771"
d G "PIN_D4" 2 56 "31772"
d G "PIN_D5" 2 57 "31773"
d G "PIN_D6" 2 58 "31774"
d G "PIN_D7" 2 59 "31775"
d G "PIN_E0" 2 61 "31776"
d G "PIN_E1" 2 62 "31777"
d G "PIN_E2" 2 63 "31778"
d G "PIN_E3" 2 64 "31779"
d G "FALSE" 2 67 "0"
d G "TRUE" 2 68 "1"
d G "BYTE" 2 70 "int8"
d G "BOOLEAN" 2 71 "int1"
d G "getc" 2 73 "getch"
d G "fgetc" 2 74 "getch"
d G "getchar" 2 75 "getch"
d G "putc" 2 76 "putchar"
d G "fputc" 2 77 "putchar"
d G "fgets" 2 78 "gets"
d G "fputs" 2 79 "puts"
d G "WDT_TIMEOUT" 2 85 "7"
d G "MCLR_FROM_SLEEP" 2 86 "11"
d G "MCLR_FROM_RUN" 2 87 "15"
d G "NORMAL_POWER_UP" 2 88 "12"
d G "BROWNOUT_RESTART" 2 89 "14"
d G "WDT_FROM_SLEEP" 2 90 "3"
d G "RESET_INSTRUCTION" 2 91 "0"
d G "REG_LOW_POWER" 2 94 "1"
d G "REG_NORMAL" 2 95 "0" "default"
d G "T0_INTERNAL" 2 103 "0"
d G "T0_EXT_L_TO_H" 2 104 "32"
d G "T0_EXT_H_TO_L" 2 105 "48"
d G "T0_DIV_1" 2 107 "8"
d G "T0_DIV_2" 2 108 "0"
d G "T0_DIV_4" 2 109 "1"
d G "T0_DIV_8" 2 110 "2"
d G "T0_DIV_16" 2 111 "3"
d G "T0_DIV_32" 2 112 "4"
d G "T0_DIV_64" 2 113 "5"
d G "T0_DIV_128" 2 114 "6"
d G "T0_DIV_256" 2 115 "7"
d G "T0_OFF" 2 117 "0x80"
d G "T0_8_BIT" 2 119 "0x40"
d G "RTCC_INTERNAL" 2 121 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 2 122 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 2 123 "48"
d G "RTCC_DIV_1" 2 124 "8"
d G "RTCC_DIV_2" 2 125 "0"
d G "RTCC_DIV_4" 2 126 "1"
d G "RTCC_DIV_8" 2 127 "2"
d G "RTCC_DIV_16" 2 128 "3"
d G "RTCC_DIV_32" 2 129 "4"
d G "RTCC_DIV_64" 2 130 "5"
d G "RTCC_DIV_128" 2 131 "6"
d G "RTCC_DIV_256" 2 132 "7"
d G "RTCC_OFF" 2 133 "0x80"
d G "RTCC_8_BIT" 2 134 "0x40"
d G "WDT_ON" 2 145 "0x100"
d G "WDT_OFF" 2 146 "0"
d G "T1_DISABLED" 2 152 "0"
d G "T1_INTERNAL" 2 153 "0x85"
d G "T1_EXTERNAL" 2 154 "0x87"
d G "T1_EXTERNAL_SYNC" 2 155 "0x83"
d G "T1_CLK_OUT" 2 157 "8"
d G "T1_DIV_BY_1" 2 159 "0"
d G "T1_DIV_BY_2" 2 160 "0x10"
d G "T1_DIV_BY_4" 2 161 "0x20"
d G "T1_DIV_BY_8" 2 162 "0x30"
d G "T2_DISABLED" 2 167 "0"
d G "T2_DIV_BY_1" 2 168 "4"
d G "T2_DIV_BY_4" 2 169 "5"
d G "T2_DIV_BY_16" 2 170 "6"
d G "T3_DISABLED" 2 176 "0"
d G "T3_INTERNAL" 2 177 "0x85"
d G "T3_EXTERNAL" 2 178 "0x87"
d G "T3_EXTERNAL_SYNC" 2 179 "0x83"
d G "T3_DIV_BY_1" 2 181 "0"
d G "T3_DIV_BY_2" 2 182 "0x10"
d G "T3_DIV_BY_4" 2 183 "0x20"
d G "T3_DIV_BY_8" 2 184 "0x30"
d G "T3_CCP1_TO_2" 2 187 "0x48"
d G "T3_CCP2" 2 188 "0x8"
d G "CCP_OFF" 2 194 "0"
d G "CCP_CAPTURE_FE" 2 195 "4"
d G "CCP_CAPTURE_RE" 2 196 "5"
d G "CCP_CAPTURE_DIV_4" 2 197 "6"
d G "CCP_CAPTURE_DIV_16" 2 198 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 199 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 200 "9"
d G "CCP_COMPARE_INT" 2 201 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 202 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 203 "0xB"
d G "CCP_PWM" 2 204 "0xC"
d G "CCP_PWM_PLUS_1" 2 205 "0x1c"
d G "CCP_PWM_PLUS_2" 2 206 "0x2c"
d G "CCP_PWM_PLUS_3" 2 207 "0x3c"
d G "CCP_PWM_H_H" 2 213 "0x0c"
d G "CCP_PWM_H_L" 2 214 "0x0d"
d G "CCP_PWM_L_H" 2 215 "0x0e"
d G "CCP_PWM_L_L" 2 216 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 2 218 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 2 219 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 2 220 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 2 222 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 2 223 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 2 224 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 2 225 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 2 226 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 2 227 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 2 228 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 2 230 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 2 231 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 2 232 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 2 234 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 2 235 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 2 236 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 2 238 "0x80000000"
d G "PSP_ENABLED" 2 248 "0x10"
d G "PSP_DISABLED" 2 249 "0"
d G "SPI_MASTER" 2 256 "0x20"
d G "SPI_SLAVE" 2 257 "0x24"
d G "SPI_L_TO_H" 2 258 "0"
d G "SPI_H_TO_L" 2 259 "0x10"
d G "SPI_CLK_DIV_4" 2 260 "0"
d G "SPI_CLK_DIV_16" 2 261 "1"
d G "SPI_CLK_DIV_64" 2 262 "2"
d G "SPI_CLK_T2" 2 263 "3"
d G "SPI_SS_DISABLED" 2 264 "1"
d G "SPI_SAMPLE_AT_END" 2 266 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 267 "0x4000"
d G "UART_ADDRESS" 2 273 "2"
d G "UART_DATA" 2 274 "4"
d G "UART_AUTODETECT" 2 275 "8"
d G "UART_AUTODETECT_NOWAIT" 2 276 "9"
d G "UART_WAKEUP_ON_RDA" 2 277 "10"
d G "UART_SEND_BREAK" 2 278 "13"
d G "D1_D0_D3_D0" 2 282 "0x0Bff04"
d G "D1_D0_D3_D2_OUT_ON_E1_E2" 2 283 "0x0FF903"
d G "D1_D0_D3_D0_OUT_ON_E1_E2" 2 284 "0x0BF905"
d G "NC_NC_NC_NC" 2 285 "0x00ff07"
d G "D1_D0_D3_D2" 2 286 "0x0Fff02"
d G "D1_D0_NC_NC_OUT_ON_E1" 2 287 "0x03FD01"
d G "D1_VR_D3_VR" 2 288 "0x0Aff06"
d G "D0_VR_D2_VR" 2 289 "0x05ff0e"
d G "CP1_INVERT" 2 290 "0x0000010"
d G "CP2_INVERT" 2 291 "0x0000020"
d G "VREF_LOW" 2 299 "0xa0"
d G "VREF_HIGH" 2 300 "0x80"
d G "VREF_F5" 2 302 "0x40"
d G "VREF_COMP" 2 303 "0x10"
d G "LVD_LVDIN" 2 308 "0x1F"
d G "LVD_45" 2 309 "0x1E"
d G "LVD_42" 2 310 "0x1D"
d G "LVD_40" 2 311 "0x1C"
d G "LVD_38" 2 312 "0x1B"
d G "LVD_36" 2 313 "0x1A"
d G "LVD_35" 2 314 "0x19"
d G "LVD_33" 2 315 "0x18"
d G "LVD_30" 2 316 "0x17"
d G "LVD_28" 2 317 "0x16"
d G "LVD_27" 2 318 "0x15"
d G "LVD_25" 2 319 "0x14"
d G "LVD_24" 2 320 "0x13"
d G "LVD_23" 2 321 "0x12"
d G "LVD_22" 2 322 "0x11"
d G "LVD_21" 2 323 "0x10"
d G "LVD_TRIGGER_BELOW" 2 325 "0"
d G "LVD_TRIGGER_ABOVE" 2 326 "0x80"
d G "OSC_31KHZ" 2 332 "0"
d G "OSC_125KHZ" 2 333 "0x10"
d G "OSC_250KHZ" 2 334 "0x20"
d G "OSC_500KHZ" 2 335 "0x30"
d G "OSC_1MHZ" 2 336 "0x40"
d G "OSC_2MHZ" 2 337 "0x50"
d G "OSC_4MHZ" 2 338 "0x60"
d G "OSC_8MHZ" 2 339 "0x70"
d G "OSC_16MHZ" 2 340 "0x4060"
d G "OSC_32MHZ" 2 341 "0x4070"
d G "OSC_TIMER1" 2 343 "1"
d G "OSC_INTRC" 2 344 "2"
d G "OSC_NORMAL" 2 345 "0"
d G "OSC_IDLE_MODE" 2 347 "0x80"
d G "OSC_31250" 2 348 "0x8000"
d G "OSC_PLL_ON" 2 349 "0x4000"
d G "OSC_PLL_OFF" 2 350 "0"
d G "OSC_STATE_STABLE" 2 354 "4"
d G "OSC_STATE_EXT_RUNNING" 2 355 "8"
d G "ADC_OFF" 2 362 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 363 "0x100"
d G "ADC_CLOCK_DIV_4" 2 364 "0x04"
d G "ADC_CLOCK_DIV_8" 2 365 "0x01"
d G "ADC_CLOCK_DIV_16" 2 366 "0x05"
d G "ADC_CLOCK_DIV_32" 2 367 "0x02"
d G "ADC_CLOCK_DIV_64" 2 368 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 369 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 371 "0x00"
d G "ADC_TAD_MUL_2" 2 372 "0x08"
d G "ADC_TAD_MUL_4" 2 373 "0x10"
d G "ADC_TAD_MUL_6" 2 374 "0x18"
d G "ADC_TAD_MUL_8" 2 375 "0x20"
d G "ADC_TAD_MUL_12" 2 376 "0x28"
d G "ADC_TAD_MUL_16" 2 377 "0x30"
d G "ADC_TAD_MUL_20" 2 378 "0x38"
d G "NO_ANALOGS" 2 381 "0x0F" "None"
d G "ALL_ANALOG" 2 382 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B1 B4 B0"
d G "AN0_TO_AN9" 2 383 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B1 B4"
d G "AN0_TO_AN8" 2 384 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B1"
d G "AN0_TO_AN7" 2 385 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 2 386 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 2 387 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 2 388 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 2 389 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 2 390 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 2 391 "0x0D" "A0 A1"
d G "AN0" 2 392 "0x0E" "A0"
d G "AN0_TO_AN12_ANALOG" 2 393 "0x02" "!old only provided for compatibility"
d G "AN0_TO_AN11_ANALOG" 2 394 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 2 395 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 2 396 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 2 397 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 2 398 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 2 399 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 2 400 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 2 401 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 2 402 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 2 405 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 2 406 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 2 407 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 2 408 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 2 412 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 413 "1"
d G "ADC_READ_ONLY" 2 414 "6"
d G "L_TO_H" 2 426 "0x40"
d G "H_TO_L" 2 427 "0"
d G "GLOBAL" 2 429 "0xF2C0"
d G "INT_RTCC" 2 430 "0x00F220"
d G "INT_TIMER0" 2 431 "0x00F220"
d G "INT_TIMER1" 2 432 "0x009D01"
d G "INT_TIMER2" 2 433 "0x009D02"
d G "INT_TIMER3" 2 434 "0x00A002"
d G "INT_EXT_L2H" 2 435 "0x5000F210"
d G "INT_EXT_H2L" 2 436 "0x6000F210"
d G "INT_EXT" 2 437 "0x00F210"
d G "INT_EXT1_L2H" 2 438 "0x5001F008"
d G "INT_EXT1_H2L" 2 439 "0x6001F008"
d G "INT_EXT1" 2 440 "0x00F008"
d G "INT_EXT2_L2H" 2 441 "0x5002F010"
d G "INT_EXT2_H2L" 2 442 "0x6002F010"
d G "INT_EXT2" 2 443 "0x00F010"
d G "INT_RB" 2 444 "0x00FFF208"
d G "INT_PSP" 2 445 "0x009D80"
d G "INT_AD" 2 446 "0x009D40"
d G "INT_RDA" 2 447 "0x009D20"
d G "INT_TBE" 2 448 "0x009D10"
d G "INT_SSP" 2 449 "0x009D08"
d G "INT_CCP1" 2 450 "0x009D04"
d G "INT_CCP2" 2 451 "0x00A001"
d G "INT_BUSCOL" 2 452 "0x00A008"
d G "INT_LOWVOLT" 2 453 "0x00A004"
d G "INT_CANIRX" 2 454 "0x00A380"
d G "INT_CANWAKE" 2 455 "0x00A340"
d G "INT_CANERR" 2 456 "0x00A320"
d G "INT_COMP" 2 457 "0x00A040"
d G "INT_EEPROM" 2 458 "0x00A010"
d G "INT_CANTX2" 2 459 "0x00A310"
d G "INT_CANTX1" 2 460 "0x00A308"
d G "INT_CANTX0" 2 461 "0x00A304"
d G "INT_CANRX1" 2 462 "0x00A302"
d G "INT_CANRX0" 2 463 "0x00A301"
d G "INT_OSCF" 2 464 "0x00A080"
D G "NUMBER_OF_SWITCHES" 3 1 "8"
D G "LED" 3 2 "PIN_E2"
D G "OUT1" 3 3 "PIN_C0" "16"
D G "OUT2" 3 4 "PIN_C1" "15"
D G "OUT3" 3 5 "PIN_C2" "14"
D G "OUT4" 3 6 "PIN_C3" "13"
D G "OUT5" 3 7 "PIN_C4" "12"
D G "OUT6" 3 8 "PIN_C5" "11"
D G "OUT7" 3 9 "PIN_C6" "10"
D G "OUT8" 3 10 "PIN_C7" "9"
D G "OUT9" 3 11 "PIN_D1" "8"
D G "OUT10" 3 12 "PIN_D0" "7"
D G "OUT11" 3 13 "PIN_D2" "6"
D G "OUT12" 3 14 "PIN_D3" "5"
D G "OUT13" 3 15 "PIN_D7" "4"
D G "OUT14" 3 16 "PIN_D6" "3"
D G "OUT15" 3 17 "PIN_D5" "2"
D G "OUT16" 3 18 "PIN_D4" "1"
D G "INP1" 3 20 "PIN_A0"
D G "INP2" 3 21 "PIN_A1"
D G "INP3" 3 22 "PIN_A2"
D G "INP4" 3 23 "PIN_A3"
D G "INP5" 3 24 "PIN_A4"
D G "INP6" 3 25 "PIN_A5"
D G "INP7" 3 26 "PIN_E0"
D G "INP8" 3 27 "PIN_E1"
V G "inputs" 3 40 "int8[8]"
V G "secClock" 3 42 "int32"
D G "CAN_USE_EXTENDED_ID" 4 1 "FALSE"
D G "__CCS_CAN18xxx8_LIB_DEFINES__" 6 20 ""
D G "CAN_DO_DEBUG" 6 23 "FALSE"
D G "CAN_BRG_SYNCH_JUMP_WIDTH" 6 31 "0" "synchronized jump width (def: 1 x Tq)"
D G "CAN_BRG_PRESCALAR" 6 35 "4" "baud rate generator prescalar (def: 4) ( Tq = (2 x (PRE + 1))/Fosc )"
D G "CAN_BRG_SEG_2_PHASE_TS" 6 39 "TRUE" "phase segment 2 time select bit (def: freely programmable)"
D G "CAN_BRG_SAM" 6 43 "0" "sample of the can bus line (def: bus line is sampled 1 times prior to sample point)"
D G "CAN_BRG_PHASE_SEGMENT_1" 6 47 "5" "phase segment 1 (def: 6 x Tq)"
D G "CAN_BRG_PROPAGATION_TIME" 6 51 "2" "propagation time select (def: 3 x Tq)"
D G "CAN_BRG_WAKE_FILTER" 6 55 "FALSE" "selects can bus line filter for wake up bit"
D G "CAN_BRG_PHASE_SEGMENT_2" 6 59 "5" "phase segment 2 time select (def: 6 x Tq)"
D G "CAN_USE_RX_DOUBLE_BUFFER" 6 63 "TRUE" "if buffer 0 overflows, do NOT use buffer 1 to put buffer 0 data"
D G "CAN_ENABLE_DRIVE_HIGH" 6 67 "0"
D G "CAN_ENABLE_CAN_CAPTURE" 6 71 "0"
D G "CAN_ENABLE_CANTX2" 6 75 "0" "0 CANTX2 disabled, 1 CANTX2 enabled"
D G "CAN_CANTX2_SOURCE" 6 79 "0" "0 source is invert of CANTX1, 1 source is CAN Clock"
E G "CAN_OP_CONFIG" 6 82 "4"
E G "CAN_OP_LISTEN" 6 82 "3"
E G "CAN_OP_LOOPBACK" 6 82 "2"
E G "CAN_OP_DISABLE" 6 82 "1"
E G "CAN_OP_NORMAL" 6 82 "0"
E G "CAN_WIN_RX0" 6 83 "0"
E G "CAN_WIN_RX1" 6 83 "5"
E G "CAN_WIN_TX0" 6 83 "4"
E G "CAN_WIN_TX1" 6 83 "3"
E G "CAN_WIN_TX2" 6 83 "2" "can control"
V G "CANCON" 6 91 "{int1 void0,int3 win,int1 abat,int3 reqop}"
E G "CAN_INT_WAKEUP" 6 95 "7"
E G "CAN_INT_RX0" 6 95 "6"
E G "CAN_INT_RX1" 6 95 "5"
E G "CAN_INT_TX0" 6 95 "4"
E G "CAN_INT_TX1" 6 95 "3"
E G "CAN_INT_TX2" 6 95 "2"
E G "CAN_INT_ERROR" 6 95 "1"
E G "CAN_INT_NO" 6 95 "0" "can status register READ-ONLY"
V G "CANSTAT" 6 103 "{int1 void0,int3 icode,int1 void4,int3 opmode}"
V G "COMSTAT" 6 116 "{int1 ewarn,int1 rxwarn,int1 txwarn,int1 rxbp,int1 txbp,int1 txbo,int1 rx1ovfl,int1 rx0ovfl}"
V G "BRGCON1" 6 123 "{int6 brp,int2 sjw}"
V G "BRGCON2" 6 132 "{int3 prseg,int3 seg1ph,int1 sam,int1 seg2phts}"
V G "BRGCON3" 6 141 "{int3 seg2ph,int3 void543,int1 wakfil,int1 void7}"
V G "CIOCON" 6 151 "{int4 void3210,int1 cancap,int1 endrhi,int1 tx2en,int1 tx2src}"
V G "TXB0CON" 6 164 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXB1CON" 6 165 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXB2CON" 6 166 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXBaCON" 6 167 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
D G "RX0MASK" 6 190 "0xF1B" "rxm0eidl"
D G "RX1MASK" 6 191 "0xF1F" "rxm1eidl"
D G "RX0FILTER0" 6 192 "0xF03" "rxf0eidl"
D G "RX0FILTER1" 6 193 "0xF07" "rxf1eidl"
D G "RX1FILTER2" 6 194 "0xF0B" "rxf2eidl"
D G "RX1FILTER3" 6 195 "0xF0F" "rxf3eidl"
D G "RX1FILTER4" 6 196 "0xF13" "rxf4eidl"
D G "RX1FILTER5" 6 197 "0xF17" "rxf5eidl"
D G "RXB0ID" 6 198 "0xF64" "rxb0eidl"
D G "RXB1ID" 6 199 "0xF54" "rxb1eidl"
D G "TXB0ID" 6 200 "0xF44" "txb0eidl"
D G "TXB1ID" 6 201 "0xF34" "txb1eidl"
D G "TXB2ID" 6 202 "0xF24" "tsb2eidl"
D G "TXRXBaID" 6 203 "0xF64"
V G "TXB0DLC" 6 220 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXB1DLC" 6 221 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXB2DLC" 6 222 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXBaDLC" 6 223 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
E G "CAN_RX_ALL" 6 234 "3"
E G "CAN_RX_EXT" 6 234 "2"
E G "CAN_RX_STD" 6 234 "1"
E G "CAN_RX_VALID" 6 234 "0" "receive buffer 0 control register"
V G "RXB0CON" 6 245 "{int1 filthit0,int1 jtoff,int1 rxb0dben,int1 rxrtrro,int1 void4,int2 rxm,int1 rxful}"
V G "RXB1CON" 6 255 "{int3 filthit,int1 rxrtrro,int1 void4,int2 rxm,int1 rxful}"
V G "TXRXBaSIDL" 6 278 "{int3 void012,int1 ext,int1 srr,int3 void567}"
V G "RXB0DLC" 6 289 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
V G "RXB1DLC" 6 290 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
V G "RXBaDLC" 6 291 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
D G "CAN_MASK_ACCEPT_ALL" 6 346 "0"
F G "can_init" 6 369 "void()"
F G "can_set_baud" 6 370 "void()"
F G "can_set_mode" 6 371 "void(CAN_OP_MODE mode)"
V L "mode" 6 371 "CAN_OP_MODE"
F G "can_set_id" 6 372 "void(*int8 addr,int32 id,int8 ext)"
V L "addr" 6 372 "*int8"
V L "id" 6 372 "int32"
V L "ext" 6 372 "int8"
F G "can_get_id" 6 373 "int32(*int8 addr,int8 ext)"
V L "addr" 6 373 "*int8"
V L "ext" 6 373 "int8"
F G "can_putd" 6 374 "int8(int32 id,*int8 data,int8 len,int8 priority,int8 ext,int8 rtr)"
V L "id" 6 374 "int32"
V L "data" 6 374 "*int8"
V L "len" 6 374 "int8"
V L "priority" 6 374 "int8"
V L "ext" 6 374 "int8"
V L "rtr" 6 374 "int8"
F G "can_getd" 6 375 "int8(int32 id,*int8 data,int8 len,{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv} stat)"
V L "id" 6 375 "int32"
V L "data" 6 375 "*int8"
V L "len" 6 375 "int8"
V L "stat" 6 375 "{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv}"
D G "can_debug" 5 63 ""
D G "can_kbhit" 5 68 "()                 (RXB0CON.rxful || RXB1CON.rxful)"
D G "can_tbe" 5 69 "()                   (!TXB0CON.txreq || !TXB1CON.txreq || !TXB2CON.txreq)"
D G "can_abort" 5 70 "()                 (CANCON.abat=1)"
C L "can_getd" 5 67 11 "FUNCTION"
F G "can_init" 5 90 "void()"
C L "can_init" 5 67 1 "FUNCTION"
C L "can_init" 5 67 1 "FUNCTION"
C L "can_init" 5 67 1 "FUNCTION"
C L "can_init" 5 67 1 "FUNCTION"
C L "can_init" 5 67 1 "FUNCTION"
C L "can_init" 5 67 1 "FUNCTION"
C L "can_init" 5 67 1 "FUNCTION"
C L "can_init" 5 67 1 "FUNCTION"
C L "can_init" 5 67 1 "FUNCTION"
C L "can_init" 5 67 1 "FUNCTION"
C L "can_init" 5 67 1 "FUNCTION"
C L "can_init" 5 67 1 "FUNCTION"
C L "can_set_baud" 5 67 6 "FUNCTION"
F G "can_set_baud" 5 131 "void()"
F G "can_set_mode" 5 144 "void()"
V L "mode" 5 144 "CAN_OP_MODE"
C L "can_set_id" 5 67 8 "FUNCTION"
F G "can_set_id" 5 164 "void(CAN_OP_MODE mode)"
V L "addr" 5 164 "*int8"
V L "id" 5 164 "int32"
V L "ext" 5 164 "int8"
V L "ptr" 5 165 "*int8"
C L "can_set_id" 5 67 2 "FUNCTION"
C L "can_set_id" 5 67 2 "FUNCTION"
C L "can_set_id" 5 67 2 "FUNCTION"
C L "can_set_id" 5 67 1 "FUNCTION"
C L "can_set_id" 5 67 1 "FUNCTION"
C L "can_set_id" 5 67 1 "FUNCTION"
C L "can_set_id" 5 67 1 "FUNCTION"
C L "can_set_id" 5 67 1 "FUNCTION"
C L "can_set_id" 5 67 2 "FUNCTION"
C L "can_set_id" 5 67 1 "FUNCTION"
C L "can_set_id" 5 67 1 "FUNCTION"
C L "can_set_id" 5 67 1 "FUNCTION"
C L "can_get_id" 5 67 9 "FUNCTION"
F G "can_get_id" 5 224 "int32(int32 id,int8 ext)"
V L "addr" 5 224 "*int8"
V L "ext" 5 224 "int8"
V L "ret" 5 225 "int32"
V L "ptr" 5 226 "*int8"
C L "can_get_id" 5 67 1 "FUNCTION"
C L "can_get_id" 5 67 1 "FUNCTION"
C L "can_get_id" 5 67 1 "FUNCTION"
C L "can_get_id" 5 67 1 "FUNCTION"
C L "can_get_id" 5 67 1 "FUNCTION"
C L "can_get_id" 5 67 1 "FUNCTION"
C L "can_putd" 5 67 15 "FUNCTION"
F G "can_putd" 5 278 "int8()"
V L "id" 5 278 "int32"
V L "data" 5 278 "*int8"
V L "len" 5 278 "int8"
V L "priority" 5 278 "int8"
V L "ext" 5 278 "int8"
V L "rtr" 5 278 "int8"
V L "i" 5 279 "int8"
V L "txd0" 5 280 "*int8"
V L "port" 5 281 "int8"
C L "can_putd" 5 67 2 "FUNCTION"
C L "can_putd" 5 67 1 "FUNCTION"
C L "can_putd" 5 67 1 "FUNCTION"
C L "can_putd" 5 67 1 "FUNCTION"
C L "can_putd" 5 67 1 "FUNCTION"
C L "can_getd" 5 67 11 "FUNCTION"
F G "can_getd" 5 361 "int8(int8 priority,int8 ext,int8 rtr)"
V L "id" 5 361 "int32"
V L "data" 5 361 "*int8"
V L "len" 5 361 "int8"
V L "stat" 5 361 "{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv}"
V L "i" 5 363 "int8"
V L "ptr" 5 364 "*int8"
C L "can_getd" 5 67 1 "FUNCTION"
D G "dev1_ze" 4 6 "10"
D G "CAN_RECEIVE_STACK_SIZE" 4 8 "10"
V G "can_rspoint" 4 9 "int8"
V G "can_rstack" 4 10 "int8[10][14]"
V G "can_rsfull" 4 11 "int1"
D G "can_receiver_full" 4 12 "() can_rsfull"
D G "CAN_TRANSMIT_STACK_SIZE" 4 13 "10"
V G "can_tspoint" 4 14 "int8"
V G "can_tstack" 4 15 "int8[10][13]"
V G "can_tsempty" 4 16 "int1"
D G "can_transmitter_empty" 4 17 "() can_tsempty"
D G "CAN_FILTER_SIZE" 4 18 "1"
V G "can_filter" 4 19 "int32[1]"
F G "canReceive" 4 22 "void()"
V L "rx_id" 4 24 "int32"
V L "rx_len" 4 25 "int8"
V L "rx_stat" 4 25 "int8"
V L "buffer" 4 26 "int8[8]"
V L "i" 4 27 "int8"
V L "j" 4 36 "int8"
F G "can_Pop" 4 61 "int8(int32 rx_id,*int8 buffer,int8 rx_len,int8 rx_stat)"
V L "rx_id" 4 61 "int32"
V L "buffer" 4 61 "*int8"
V L "rx_len" 4 61 "int8"
V L "rx_stat" 4 61 "int8"
V L "i" 4 63 "int8"
F G "canTransmit" 4 90 "void()"
V L "tx_id" 4 92 "int32"
V L "tx_length" 4 93 "int8"
V L "tx_priority" 4 94 "int8"
V L "tx_buffer" 4 95 "int8[8]"
V L "tx_extendedID" 4 96 "int1"
V L "tx_emptyframe" 4 97 "int1"
V L "i" 4 98 "int8"
F G "can_push" 4 132 "int8(int32 tx_id,*int8 tx_buffer,int8 tx_length,int8 tx_priority,int8 tx_extendedID,int8 tx_emptyframe)"
V L "tx_id" 4 132 "int32"
V L "tx_buffer" 4 132 "*int8"
V L "tx_length" 4 132 "int8"
V L "tx_priority" 4 132 "int8"
V L "tx_extendedID" 4 132 "int8"
V L "tx_emptyframe" 4 132 "int8"
V L "i" 4 134 "int8"
V G "temp" 0 5 "int8"
D G "DEBUG" 0 6 "TRUE"
E G "on" 7 2 "0"
E G "off" 7 2 "1"
E G "dimming" 7 2 "2"
E G "dimmed" 7 2 "3"
E G "maxed" 7 2 "4"
E G "up" 7 3 "0"
E G "down" 7 3 "1"
E G "button_pressed" 7 4 "0"
E G "button_depressed" 7 4 "1"
E G "_on_off" 7 5 "100"
E G "dimmer" 7 5 "101"
E G "shutter" 7 5 "102"
E G "_on" 7 6 "0"
E G "_off" 7 6 "1"
E G "_dimmed" 7 6 "2"
E G "dimmer_switch" 7 7 "0"
E G "on_off_switch" 7 7 "1"
E G "button_switch" 7 7 "2"
E G "timer" 7 7 "3"
E G "none" 7 7 "4"
F G "dimmer_init" 7 9 "void(int8 dim_adr,int8 on_adr,int8 off_adr,*off_adr input)"
V L "dim_adr" 7 9 "int8"
V L "on_adr" 7 9 "int8"
V L "off_adr" 7 9 "int8"
V L "input" 7 9 "*off_adr"
C L "dimmer_init" 7 22 1 "FUNCTION"
C L "dimmer_init" 7 22 1 "FUNCTION"
C L "dimmer_init" 7 22 1 "FUNCTION"
C L "dimmer_init" 7 22 1 "FUNCTION"
E G "time_on" 7 61 "0"
E G "time_off" 7 61 "1"
E G "periodic_on" 7 61 "2"
C L "dimmer_init" 7 22 1 "FUNCTION"
E G "goingUp" 7 104 "0"
E G "goingDown" 7 104 "1"
E G "goingFullUp" 7 104 "2"
E G "goingFullDown" 7 104 "3"
E G "idle" 7 104 "4"
E G "sleeping" 7 104 "5"
C L "dimmer_init" 7 22 1 "FUNCTION"
C L "dimmer_init" 7 22 1 "FUNCTION"
T G "devicestype" 7 140 "{int8 numberOfInputs,int8 numberOfOutputs,{input_type type,{{{int8 adress,int8 value,int1 needs_update} on,{int8 adress,int8 value,int1 needs_update} off,int1 current_state,int1 previous_state,int32 timer,switch_outstate outstate,int8 realbutton} ,{{int8 adress,int8 value,int1 needs_update} dim_level,{int8 adress,int8 value,int1 needs_update} on,{int8 adress,int8 value,int1 needs_update} off,int8 current_level,int32 timer,int1 current_state,int1 previous_state,int1 direction,switch_outstate outstate,int8 realbutton} ,{timer_type type,int16 timeToAct,{int8 adress,int8 value,int1 needs_update} on,{int8 adress,int8 value,int1 needs_update} off,{int8[8] adress,int8 value,int1 needs_update} start,{int8[8] adress,int8 value,int1 needs_update} stop,int16 timer,int1 active} ,{{int8 adress,int8 value,int1 needs_update} on,{int8 adress,int8 value,int1 needs_update} off,int1 current_state,int1 previous_state,switch_outstate outstate,int1 repeat,int8 realbutton} } device}[10] myinputs,{output_type type,{{{int8[8] adress,int8 value,int1 needs_update} on,{int8[8] adress,int8 value,int1 needs_update} off,{int8[8] adress,int8 value,int1 needs_update} dim_value,output_state out_state,int8 output_pin,int8 internal_order,int1 needs_update} ,{{int8[8] adress,int8 value,int1 needs_update} on,{int8[8] adress,int8 value,int1 needs_update} off,int8 output_pin,int1 needs_update} ,{{int8[8] adress,int8 value,int1 needs_update} up,{int8[8] adress,int8 value,int1 needs_update} down,{int8[8] adress,int8 value,int1 needs_update} fullup,{int8[8] adress,int8 value,int1 needs_update} fulldown,int8 output_pin_up,int8 output_pin_down,int8 internalCounter,int8 fullTime,int8 shortTime,shutter_state state} } device}[16] myoutputs}"
V G "mydevices" 7 142 "devicestype"
F G "copy_array" 7 144 "void(*int8 origin,*data_point_in destination,int8 n_elements)"
V L "origin" 7 144 "*int8"
V L "destination" 7 144 "*data_point_in"
V L "n_elements" 7 144 "int8"
V L "x" 7 146 "int8"
C L "dimmer_init" 7 22 1 "FUNCTION"
F G "dimmer_init" 7 156 "void(int8 dim_adr,int8 on_adr,int8 off_adr,*inputs input,int8 real_button)"
V L "dim_adr" 7 156 "int8"
V L "on_adr" 7 156 "int8"
V L "off_adr" 7 156 "int8"
V L "input" 7 156 "*inputs"
V L "real_button" 7 156 "int8"
F G "on_off_init" 7 175 "void(int8 on_adr,int8 off_adr,*inputs input,int8 real_button)"
V L "on_adr" 7 175 "int8"
V L "off_adr" 7 175 "int8"
V L "input" 7 175 "*inputs"
V L "real_button" 7 175 "int8"
V L "sw" 7 177 "{{int8 adress,int8 value,int1 needs_update} on,{int8 adress,int8 value,int1 needs_update} off,int1 current_state,int1 previous_state,int32 timer,switch_outstate outstate,int8 realbutton}"
F G "button_init" 7 190 "void(int8 on_adr,int8 off_adr,*inputs input,int8 real_button,int8 repeat)"
V L "on_adr" 7 190 "int8"
V L "off_adr" 7 190 "int8"
V L "input" 7 190 "*inputs"
V L "real_button" 7 190 "int8"
V L "repeat" 7 190 "int8"
V L "sw" 7 192 "{{int8 adress,int8 value,int1 needs_update} on,{int8 adress,int8 value,int1 needs_update} off,int1 current_state,int1 previous_state,switch_outstate outstate,int1 repeat,int8 realbutton}"
C L "dimmer_out_init" 7 22 1 "FUNCTION"
F G "dimmer_out_init" 7 209 "void(*int8 dim_adr,*int8 on_adr,*int8 off_adr,*outputs output,int8 output_pin)"
V L "dim_adr" 7 209 "*int8"
V L "on_adr" 7 209 "*int8"
V L "off_adr" 7 209 "*int8"
V L "output" 7 209 "*outputs"
V L "output_pin" 7 209 "int8"
F G "onOff_out_init" 7 224 "void(*int8 on_adr,*int8 off_adr,*outputs output,int8 output_pin)"
V L "on_adr" 7 224 "*int8"
V L "off_adr" 7 224 "*int8"
V L "output" 7 224 "*outputs"
V L "output_pin" 7 224 "int8"
F G "shutter_out_init" 7 236 "void(*int8 up_adr,*int8 down_adr,*int8 fullup_adr,*int8 fulldown_adr,*outputs output,int8 up_output_pin,int8 down_output_pin,int8 shortMoveTime,int8 LongMoveTime)"
V L "up_adr" 7 236 "*int8"
V L "down_adr" 7 236 "*int8"
V L "fullup_adr" 7 236 "*int8"
V L "fulldown_adr" 7 236 "*int8"
V L "output" 7 237 "*outputs"
V L "up_output_pin" 7 237 "int8"
V L "down_output_pin" 7 237 "int8"
V L "shortMoveTime" 7 237 "int8"
V L "LongMoveTime" 7 237 "int8"
F G "timer_init" 7 259 "void(*int8 start_adr,*int8 stop_adr,int8 out_on,int8 out_off,*inputs input,timer_type type,int16 timeToAct)"
V L "start_adr" 7 259 "*int8"
V L "stop_adr" 7 259 "*int8"
V L "out_on" 7 259 "int8"
V L "out_off" 7 259 "int8"
V L "input" 7 259 "*inputs"
V L "type" 7 259 "timer_type"
V L "timeToAct" 7 259 "int16"
C L "timer_init" 7 22 1 "FUNCTION"
F G "button_test" 7 282 "void()"
C L "button_test" 7 22 4 "FUNCTION"
C L "button_test" 7 22 1 "FUNCTION"
V L "start_adr" 7 290 "int8[8]"
V L "empty" 7 291 "int8[8]"
C L "button_test" 7 22 4 "FUNCTION"
D G "N_LUZES" 8 1 "16" "numero maximo de dimmers"
V G "used_dimmers" 8 2 "int8"
D G "printf_" 8 5 "" ""
V G "organizado" 8 6 "int1" "flag que diz se os dimmings estao organizados"
V G "actmat" 8 7 "int1"
V G "pointer" 8 8 "int16" "apontador para matriz em uso"
V G "vez" 8 9 "int8" "indice da matriz de dimming corrente"
V G "mnumluzes" 8 10 "int8"
V G "onoffsvalue" 8 11 "int16"
V G "ltlevel" 8 12 "int8[16]"
V G "delays1" 8 13 "int16[17][2]"
V G "delays2" 8 14 "int16[17][2]"
V G "light_pins" 8 15 "int16[16]"
V G "lights" 8 21 "int16[16]"
V G "Matrizluz" 8 22 "int16[128]"
F G "fpointer" 8 38 "int16(int8 ax,int8 ay)"
V L "ax" 8 38 "int8"
V L "ay" 8 38 "int8"
V L "p" 8 40 "*int16"
F G "org" 8 46 "void()"
C L "org" 8 4 1 "FUNCTION"
V L "tempd" 8 49 "int16[16][2]"
V L "numluzes" 8 50 "int8"
V L "again" 8 51 "int1"
V L "fa" 8 52 "int8"
V L "fl" 8 53 "int16"
V L "afa" 8 54 "int8"
C L "org" 8 4 1 "FUNCTION"
C L "org" 8 4 1 "FUNCTION"
C L "org" 8 4 1 "FUNCTION"
C L "org" 8 4 3 "FUNCTION"
C L "org" 8 4 2 "FUNCTION"
C L "org" 8 4 1 "FUNCTION"
C L "org" 8 4 1 "FUNCTION"
C L "org" 8 4 4 "FUNCTION"
F G "dimmer_outputs_init" 8 142 "void()"
C L "dimmer_outputs_init" 8 4 2 "FUNCTION"
V L "x" 8 157 "int8"
F G "write_outputs" 8 182 "void()"
V L "x" 8 184 "int8"
V L "update_dimmers" 8 185 "int1"
C L "write_outputs" 8 4 1 "FUNCTION"
C L "write_outputs" 8 4 1 "FUNCTION"
F G "dimmer_test" 8 292 "void()"
V L "dim_adr" 8 295 "int8[8]"
C L "dimmer_test" 8 4 2 "FUNCTION"
V L "timedon_adr" 8 298 "int8[8]"
V L "empty" 8 299 "int8[8]"
C L "dimmer_test" 8 4 2 "FUNCTION"
V L "off_adr" 8 302 "int8[8]"
V L "on_adr" 8 303 "int8[8]"
C L "dimmer_test" 8 4 1 "FUNCTION"
F G "array_contains" 9 1 "int8(*data_point_in array,int8 value)"
V L "array" 9 1 "*data_point_in"
V L "value" 9 1 "int8"
V L "x" 9 3 "int8"
C L "array_contains" 9 6 2 "FUNCTION"
F G "process_inpoints" 9 14 "void(int8 datapoint,int8 value)"
V L "datapoint" 9 14 "int8"
V L "value" 9 14 "int8" "processa os datapoints de entrada que estao associados a saidas reais"
V L "x" 9 16 "int8"
C L "process_inpoints" 9 6 1 "FUNCTION"
C L "process_inpoints" 9 6 1 "FUNCTION"
C L "process_inpoints" 9 6 1 "FUNCTION"
C L "process_inpoints" 9 6 1 "FUNCTION"
C L "process_inpoints" 9 6 1 "FUNCTION"
C L "process_inpoints" 9 6 1 "FUNCTION"
C L "process_inpoints" 9 6 1 "FUNCTION"
F G "process_outpoint_answer" 9 116 "void(int8 adress,int8 value)"
V L "adress" 9 116 "int8"
V L "value" 9 116 "int8" "disable_interrupts (GLOBAL) ;"
C L "process_outpoint_answer" 9 6 2 "FUNCTION"
C L "process_outpoint_answer" 9 6 2 "FUNCTION"
F G "process_outpoints" 9 125 "void()"
V L "x" 9 127 "int8"
C L "process_outpoints" 9 6 1 "FUNCTION"
F G "processTimedEvents" 10 1 "void()"
V L "x" 10 3 "int8"
C L "processTimedEvents" 10 65 1 "FUNCTION"
F G "testInputs" 11 1 "void()"
V L "bit1" 11 7 "int1"
V L "bit2" 11 8 "int1"
V L "bit3" 11 9 "int1"
V L "bit4" 11 10 "int1"
V L "bit5" 11 11 "int1"
V L "bit6" 11 12 "int1"
V L "bit7" 11 13 "int1"
V L "bit8" 11 14 "int1"
F G "testOutputs" 11 19 "void()"
V L "loop" 11 21 "int1"
V L "c" 11 26 "int8"
F G "goDebug" 11 101 "void()"
V L "c" 11 109 "int8"
D G "MEM_OFFSET" 12 1 "0"
F G "_write_eeprom" 12 4 "int8(int16 adress,int8 value)"
V L "adress" 12 4 "int16"
V L "value" 12 4 "int8"
V G "writeMemPointer" 12 12 "int16"
C L "memToArray" 12 13 2 "FUNCTION"
F G "memToArray" 12 15 "void(*int8 array,int16 memAdress,int8 lenght)"
V L "array" 12 15 "*int8"
V L "memAdress" 12 15 "int16"
V L "lenght" 12 15 "int8"
V L "x" 12 17 "int8"
F G "ArrayToMem" 12 24 "void(*int8 array,int16 memAdress,int8 lenght)"
V L "array" 12 24 "*int8"
V L "memAdress" 12 24 "int16"
V L "lenght" 12 24 "int8"
V L "x" 12 26 "int8"
F G "readDevices" 12 33 "void()"
V L "mempointer" 12 35 "int16"
V L "inputNumber" 12 36 "int8"
V L "outputNumber" 12 37 "int8"
V L "on_adr" 12 46 "int8"
V L "off_adr" 12 47 "int8"
V L "real_button" 12 48 "int8"
C L "readDevices" 12 13 1 "FUNCTION"
V L "dim_adr" 12 58 "int8"
V L "repeat" 12 74 "int1"
V L "start_adr" 12 84 "int8[8]" "printf("EEPROM start %d %Lu\n\r",read_eeprom(mempointer),mempointer);"
V L "stop_adr" 12 88 "int8[8]" "printf("EEPROM stop %d\n\r",read_eeprom(mempointer));"
V L "out_on" 12 92 "int8"
C L "readDevices" 12 13 1 "FUNCTION"
V L "out_off" 12 94 "int8"
C L "readDevices" 12 13 1 "FUNCTION"
V L "type" 12 96 "int8"
V L "timeToAct" 12 97 "int16"
V L "_dim_adr" 12 109 "int8[8]"
V L "_on_adr" 12 112 "int8[8]"
V L "_off_adr" 12 115 "int8[8]"
V L "output_pin" 12 118 "int8"
V L "up_adr" 12 128 "int8[8]"
V L "down_adr" 12 131 "int8[8]"
V L "fullup_adr" 12 134 "int8[8]"
V L "fulldown_adr" 12 137 "int8[8]"
V L "up_output_pin" 12 140 "int8"
V L "down_output_pin" 12 141 "int8"
V L "shortMoveTime" 12 142 "int8"
V L "LongMoveTime" 12 143 "int8"
C L "eeprom_dimmer_init" 12 13 1 "FUNCTION"
F G "eeprom_dimmer_init" 12 171 "void(int8 dim_adr,int8 on_adr,int8 off_adr,int8 real_button)"
V L "dim_adr" 12 171 "int8"
V L "on_adr" 12 171 "int8"
V L "off_adr" 12 171 "int8"
V L "real_button" 12 171 "int8"
F G "eeprom_on_off_init" 12 181 "void(int8 on_adr,int8 off_adr,int8 real_button)"
V L "on_adr" 12 181 "int8"
V L "off_adr" 12 181 "int8"
V L "real_button" 12 181 "int8"
F G "eeprom_button_init" 12 189 "void(int8 on_adr,int8 off_adr,int8 real_button,int8 repeat)"
V L "on_adr" 12 189 "int8"
V L "off_adr" 12 189 "int8"
V L "real_button" 12 189 "int8"
V L "repeat" 12 189 "int8"
C L "eeprom_dimmer_out_init" 12 13 1 "FUNCTION"
F G "eeprom_dimmer_out_init" 12 200 "void(*int8 dim_adr,*int8 on_adr,*int8 off_adr,int8 output_pin)"
V L "dim_adr" 12 200 "*int8"
V L "on_adr" 12 200 "*int8"
V L "off_adr" 12 200 "*int8"
V L "output_pin" 12 200 "int8"
F G "eeprom_onOff_out_init" 12 213 "void(*int8 on_adr,*int8 off_adr,int8 output_pin)"
V L "on_adr" 12 213 "*int8"
V L "off_adr" 12 213 "*int8"
V L "output_pin" 12 213 "int8"
F G "eeprom_shutter_out_init" 12 225 "void(*int8 up_adr,*int8 down_adr,*int8 fullup_adr,*int8 fulldown_adr,int8 up_output_pin,int8 down_output_pin,int8 shortMoveTime,int8 LongMoveTime)"
V L "up_adr" 12 225 "*int8"
V L "down_adr" 12 225 "*int8"
V L "fullup_adr" 12 225 "*int8"
V L "fulldown_adr" 12 225 "*int8"
V L "up_output_pin" 12 226 "int8"
V L "down_output_pin" 12 226 "int8"
V L "shortMoveTime" 12 226 "int8"
V L "LongMoveTime" 12 226 "int8"
F G "eeprom_timer_init" 12 244 "void(*int8 start_adr,*int8 stop_adr,int8 out_on,int8 out_off,timer_type type,int16 timeToAct)"
V L "start_adr" 12 244 "*int8"
V L "stop_adr" 12 244 "*int8"
V L "out_on" 12 244 "int8"
V L "out_off" 12 244 "int8"
V L "type" 12 244 "timer_type"
V L "timeToAct" 12 244 "int16"
V G "clock" 0 16 "int32"
V G "secondFlag" 0 17 "int1"
V G "syncError" 0 18 "int1"
V G "oscError" 0 19 "int1"
V G "misscounter" 0 20 "int16" "dimmer constants"
V G "TimeBase" 0 22 "int8"
V G "reg" 0 23 "int32"
V G "ledErrorCounter" 0 24 "int16" "dimmer end"
C L "process_onOff" 0 15 1 "FUNCTION"
F G "process_onOff" 13 3 "void(*on_off_switch sw)"
V L "sw" 13 3 "*on_off_switch"
F G "process_buttons" 13 29 "void(*button_switch sw)"
V L "sw" 13 29 "*button_switch"
F G "process_dimmers" 13 48 "void(*dimmer_switch sw)"
V L "sw" 13 48 "*dimmer_switch"
V L "last_level" 13 50 "int8"
C L "process_dimmers" 13 51 1 "FUNCTION"
C L "process_dimmers" 13 51 1 "FUNCTION"
C L "process_dimmers" 13 51 1 "FUNCTION"
C L "process_dimmers" 13 51 1 "FUNCTION"
C L "process_dimmers" 13 51 1 "FUNCTION"
C L "process_dimmers" 13 51 1 "FUNCTION"
C L "process_dimmers" 13 51 1 "FUNCTION"
C L "process_dimmers" 13 51 1 "FUNCTION"
C L "process_dimmers" 13 51 1 "FUNCTION"
C L "process_dimmers" 13 51 1 "FUNCTION"
C L "process_dimmers" 13 51 1 "FUNCTION"
C L "process_dimmers" 13 51 1 "FUNCTION"
F G "read_inputs" 13 137 "void()" "called periodicaly to pass current phisical input (or timer values) value to structures"
V L "x" 13 139 "int8"
F G "print_inputs" 13 186 "void(int8 disable_updates)"
V L "disable_updates" 13 186 "int8"
V L "x" 13 188 "int8"
F G "TIMER0_isr" 14 2 "void()"
F G "TIMER1_isr" 14 9 "void()"
F G "TIMER2_isr" 14 17 "void()"
V L "clockT2temp" 14 19 "int8" "static int lixo=0;"
C L "TIMER2_isr" 14 22 1 "FUNCTION"
C L "TIMER2_isr" 14 22 1 "FUNCTION"
C L "TIMER2_isr" 14 22 10 "FUNCTION"
F G "EXT_isr" 14 48 "void()"
C L "EXT_isr" 14 22 6 "FUNCTION"
F G "CCP1_isr" 14 85 "void()"
C L "CCP1_isr" 14 22 4 "FUNCTION"
V L "auxccp" 14 93 "int16"
F G "RDA_isr" 14 103 "void()"
F G "TBE_isr" 14 108 "void()"
F G "BUSCOL_isr" 14 113 "void()"
F G "OSCF_isr" 14 118 "void()"
F G "canrx0_int" 14 124 "void()"
C L "canrx0_int" 14 22 1 "FUNCTION"
F G "canrx1_int" 14 131 "void()"
C L "canrx1_int" 14 22 1 "FUNCTION"
F G "cantx0_int" 14 138 "void()"
C L "cantx0_int" 14 22 1 "FUNCTION"
F G "cantx1_int" 14 145 "void()"
C L "cantx1_int" 14 22 1 "FUNCTION"
F G "cantx2_int" 14 152 "void()"
C L "cantx2_int" 14 22 1 "FUNCTION"
F G "canirx_int" 14 159 "void()" "TODO: add CAN IRX handling code here"
F G "canerr_int" 14 165 "void()" "TODO: add CAN error handling code here"
F G "interrupts_enable" 14 170 "void()" "enable_interrupts (int_canrx0);"
C L "interrupts_enable" 14 22 6 "FUNCTION"
C L "interrupts_enable" 14 22 10 "FUNCTION"
F G "hw_setup" 15 1 "void()" "CAN_BUS SETUP"
C L "hw_setup" 15 16 1 "FUNCTION"
C L "hw_setup" 15 16 1 "FUNCTION"
C L "hw_setup" 15 16 1 "FUNCTION"
C L "hw_setup" 15 16 1 "FUNCTION"
C L "hw_setup" 15 16 1 "FUNCTION"
C L "hw_setup" 15 16 1 "FUNCTION"
F G "MAIN" 0 33 "void()"
C L "MAIN" 0 40 96 "FUNCTION"
C L "MAIN" 0 40 1 "FUNCTION"
C L "MAIN" 0 40 2 "FUNCTION"
C L "MAIN" 0 40 2 "FUNCTION"
C L "MAIN" 0 40 2 "FUNCTION"
V L "on_adr" 0 167 "int8[8]"
V L "off_adr" 0 168 "int8[8]"
V L "dim_adr" 0 169 "int8[8]"
C L "MAIN" 0 40 1 "FUNCTION"
C L "MAIN" 0 40 1 "FUNCTION"
C L "MAIN" 0 40 1 "FUNCTION"
C L "MAIN" 0 40 1 "FUNCTION"
C L "MAIN" 0 40 4 "FUNCTION"
C L "MAIN" 0 40 1 "FUNCTION"
C L "MAIN" 0 40 2 "FUNCTION"
C L "MAIN" 0 40 1 "FUNCTION"
C L "MAIN" 0 40 1 "FUNCTION"
C L "MAIN" 0 40 5 "FUNCTION"
C L "MAIN" 0 40 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 2
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
